YOLO 객체 감지 모델 선정 근거 및 고려사항
다각형 라벨링과 바운딩 박스 간의 Trade-off 분석
1. 다각형 라벨링(Polygon)의 정밀성과 한계
다각형 라벨링은 객체의 정확한 형태와 경계를 세밀하게 표현할 수 있는 장점이 있습니다. 그러나 이 정보를 YOLO 객체 감지 모델에 적용할 때, 다각형 라벨링은 바운딩 박스로 단순화되어 세밀한 경계 정보가 손실됩니다. 이는 복잡한 형태나 비정형 객체에서 정확도 저하, 배경 포함 문제, 객체 간 겹침 문제를 야기할 수 있습니다.
2. 세그멘테이션 모델의 장단점
세그멘테이션 모델(예: YOLOv8-seg)은 다각형 라벨링의 정밀함을 충분히 활용할 수 있지만, 다음과 같은 단점이 있습니다:

계산 복잡도 증가: 픽셀 단위 분류로 인해 계산량이 크게 증가
메모리 사용량 증가: 더 많은 파라미터와 특성 맵 필요
추론 속도 저하: 객체 감지 대비 약 20-30% 느린 속도
학습 시간 증가: 더 많은 데이터와 계산으로 인한 훈련 시간 증가
높은 하드웨어 요구사항: 더 강력한 GPU와 메모리 필요

3. 객체 감지 모델(YOLO)의 장점
YOLO 객체 감지 모델은 다음과 같은 이유로 많은 실용적 응용에서 선호됩니다:

높은 계산 효율성: 세그멘테이션 대비 빠른 학습 및 추론 속도
메모리 효율성: 더 적은 메모리 요구로 다양한 하드웨어에서 실행 가능
실시간 처리 적합성: 빠른 처리 속도로 실시간 애플리케이션에 적합
충분한 정확도: 대부분의 객체 감지 작업에서 만족할 만한 정확도 제공
폭넓은 호환성: 다양한 플랫폼 및 디바이스와의 높은 호환성

최종 모델 선정 논리
1. 실용적 성능 요구사항 분석
프로젝트에서는 다음과 같은 요소들을 고려하여 YOLO 객체 감지 모델을 선택했습니다:

계산 효율성 우선: 제한된 컴퓨팅 리소스에서도 원활한 운영을 위해 효율적인 모델 필요
속도-정확도 균형: 허용 가능한 정확도를 유지하면서 더 빠른 처리 속도 우선
실시간 처리 요구: 필요한 경우 실시간 응답이 가능한 가벼운 모델 선택

2. 단계적 접근 방법론
본 프로젝트에서는 다음과 같은 단계적 접근 방법을 채택했습니다:

객체 감지 모델로 시작: YOLOv8m 모델을 기본으로 사용하여 초기 성능 평가
성능 평가 후 결정: 객체 감지 모델의 성능이 충분하지 않을 경우 세그멘테이션 모델 도입 고려
지속적인 개선: 추가 학습(fine-tuning) 기능을 통해 새로운 데이터로 모델을 지속적으로 개선

3. 기술적 최적화 전략
선택한 모델의 효율성을 높이기 위해 다음과 같은 최적화 전략을 적용했습니다:

최적 이미지 크기 선택: 1280x720 원본 이미지 크기에 맞는 적절한 입력 크기 설정
배치 크기 최적화: 가용 메모리와 학습 효율성을 고려한 배치 크기 설정
체크포인트 활용: 5 에포크마다 체크포인트 저장으로 학습 중단 시 복구 가능성 확보
학습률 자동 조정: 추가 학습 시 낮은 학습률을 적용하여 안정적인 모델 개선

결론
다각형 라벨링의 세밀한 정보는 세그멘테이션 모델에서 더 효과적으로 활용될 수 있지만, 실용적인 운영 환경, 계산 효율성, 리소스 제약을 고려할 때 YOLO 객체 감지 모델이 현 프로젝트에 더 적합한 선택입니다. 이는 충분한 정확도를 제공하면서도 효율적인 계산과 실시간에 가까운 처리 속도를 보장합니다.
추후 응용 분야의 요구사항 변화나 하드웨어 환경의 개선에 따라, 세그멘테이션 기반 모델로의 전환을 검토할 수 있습니다. 이러한 단계적 접근법은 프로젝트의 즉각적인 요구사항을 충족시키는 동시에, 미래의 확장 가능성을 열어두는 균형 잡힌 전략입니다.